%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10 (Build 14A389) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 368 64
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 368 64
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.29019609 0.10196079 0.17411767 sc
q
0 0 368 64 rc
63.024643 20.464001 m
63.024643 19.408001 63.600643 18.879999 64.608643 18.879999 c
64.608643 18.879999 66.192642 18.879999 66.192642 18.879999 c
67.200645 18.879999 67.776642 19.408001 67.776642 20.464001 c
67.776642 20.464001 67.776642 33.231998 67.776642 33.231998 c
67.776642 33.231998 78.048645 50.896 78.048645 50.896 c
78.672646 51.952 78.192642 52.768002 76.944641 52.768002 c
76.944641 52.768002 75.024643 52.768002 75.024643 52.768002 c
74.160645 52.768002 73.584641 52.431999 73.200645 51.664001 c
73.200645 51.664001 67.536644 41.632 67.536644 41.632 c
66.480644 39.712002 65.472641 37.360001 65.472641 37.360001 c
65.472641 37.360001 65.37664 37.360001 65.37664 37.360001 c
65.37664 37.360001 64.320641 39.712002 63.312641 41.632 c
63.312641 41.632 57.600643 51.664001 57.600643 51.664001 c
57.21664 52.431999 56.64064 52.768002 55.776642 52.768002 c
55.776642 52.768002 53.85664 52.768002 53.85664 52.768002 c
52.608643 52.768002 52.128643 51.952 52.752644 50.896 c
52.752644 50.896 63.024643 33.231998 63.024643 33.231998 c
63.024643 33.231998 63.024643 20.464001 63.024643 20.464001 c
h
f*
72.624641 31.072001 m
72.624641 23.68 78.43264 18.304001 85.680641 18.304001 c
92.928642 18.304001 98.784645 23.68 98.784645 31.072001 c
98.784645 38.416 92.928642 43.743999 85.680641 43.743999 c
78.43264 43.743999 72.624641 38.416 72.624641 31.072001 c
h
77.328644 31.072001 m
77.328644 36.112 81.120644 39.712002 85.680641 39.712002 c
90.288643 39.712002 94.032639 36.112 94.032639 31.072001 c
94.032639 25.983999 90.288643 22.336 85.680641 22.336 c
81.120644 22.336 77.328644 25.983999 77.328644 31.072001 c
h
f*
101.71264 27.615999 m
101.71264 21.184 104.49664 18.304001 109.96864 18.304001 c
114.72064 18.304001 117.93665 21.615999 118.99265 24.016001 c
118.99265 24.016001 119.08864 24.016001 119.08864 24.016001 c
119.08864 24.016001 118.94464 23.344 118.94464 22.624001 c
118.94464 22.624001 118.94464 20.464001 118.94464 20.464001 c
118.94464 19.408001 119.47264 18.879999 120.52864 18.879999 c
120.52864 18.879999 121.87264 18.879999 121.87264 18.879999 c
122.88064 18.879999 123.45664 19.408001 123.45664 20.464001 c
123.45664 20.464001 123.45664 41.584 123.45664 41.584 c
123.45664 42.639999 122.88064 43.167999 121.87264 43.167999 c
121.87264 43.167999 120.38464 43.167999 120.38464 43.167999 c
119.32864 43.167999 118.80064 42.639999 118.80064 41.584 c
118.80064 41.584 118.80064 31.792 118.80064 31.792 c
118.80064 26.992001 115.87264 22.624001 110.88064 22.624001 c
107.04064 22.624001 106.32064 25.312 106.32064 28.672001 c
106.32064 28.672001 106.32064 41.584 106.32064 41.584 c
106.32064 42.639999 105.79264 43.167999 104.78465 43.167999 c
104.78465 43.167999 103.29664 43.167999 103.29664 43.167999 c
102.24064 43.167999 101.71264 42.639999 101.71264 41.584 c
101.71264 41.584 101.71264 27.615999 101.71264 27.615999 c
h
f*
128.25664 20.464001 m
128.25664 19.408001 128.83264 18.879999 129.84064 18.879999 c
129.84064 18.879999 131.32864 18.879999 131.32864 18.879999 c
132.38464 18.879999 132.91264 19.408001 132.91264 20.464001 c
132.91264 20.464001 132.91264 28.912001 132.91264 28.912001 c
132.91264 33.712002 135.21664 38.848 139.96864 38.848 c
141.07265 38.848 141.69664 39.375999 141.69664 40.431999 c
141.69664 40.431999 141.69664 41.776001 141.69664 41.776001 c
141.69664 42.832001 141.26465 43.360001 140.16064 43.360001 c
136.51263 43.360001 133.77664 40.192001 132.72064 36.976002 c
132.72064 36.976002 132.62465 36.976002 132.62465 36.976002 c
132.62465 36.976002 132.76865 37.792 132.76865 38.799999 c
132.76865 38.799999 132.76865 41.584 132.76865 41.584 c
132.76865 42.639999 132.24065 43.167999 131.18465 43.167999 c
131.18465 43.167999 129.84064 43.167999 129.84064 43.167999 c
128.83264 43.167999 128.25664 42.639999 128.25664 41.584 c
128.25664 41.584 128.25664 20.464001 128.25664 20.464001 c
h
f*
152.35265 36.015999 m
152.35265 26.08 159.21664 18.304001 169.68065 18.304001 c
175.87263 18.304001 180.00064 21.184 181.72864 22.624001 c
182.49664 23.296 182.54465 24.063999 181.96864 24.832001 c
181.96864 24.832001 181.24864 25.792 181.24864 25.792 c
180.62465 26.608 179.85664 26.608 179.04063 25.983999 c
177.55264 24.832001 174.28864 22.672001 169.82465 22.672001 c
162.00064 22.672001 157.24864 28.864 157.24864 36.063999 c
157.24864 43.216 161.90465 48.976002 169.77664 48.976002 c
173.85664 48.976002 176.83264 47.248001 178.27264 46.287998 c
179.18465 45.712002 179.90465 45.807999 180.48064 46.672001 c
180.48064 46.672001 181.10464 47.632 181.10464 47.632 c
181.63264 48.495998 181.58464 49.264 180.81664 49.84 c
179.13664 51.088001 175.39264 53.344002 169.58464 53.344002 c
159.45663 53.344002 152.35265 45.855999 152.35265 36.015999 c
h
f*
183.93665 31.072001 m
183.93665 23.68 189.74464 18.304001 196.99265 18.304001 c
204.24065 18.304001 210.09665 23.68 210.09665 31.072001 c
210.09665 38.416 204.24065 43.743999 196.99265 43.743999 c
189.74464 43.743999 183.93665 38.416 183.93665 31.072001 c
h
188.64064 31.072001 m
188.64064 36.112 192.43265 39.712002 196.99265 39.712002 c
201.60065 39.712002 205.34464 36.112 205.34464 31.072001 c
205.34464 25.983999 201.60065 22.336 196.99265 22.336 c
192.43265 22.336 188.64064 25.983999 188.64064 31.072001 c
h
f*
213.31264 20.464001 m
213.31264 19.408001 213.88864 18.879999 214.89664 18.879999 c
214.89664 18.879999 216.38464 18.879999 216.38464 18.879999 c
217.44064 18.879999 217.96864 19.408001 217.96864 20.464001 c
217.96864 20.464001 217.96864 30.208 217.96864 30.208 c
217.96864 34.720001 220.65665 39.52 225.26465 39.52 c
229.00864 39.52 229.48865 36.591999 229.48865 33.424 c
229.48865 33.424 229.48865 20.464001 229.48865 20.464001 c
229.48865 19.408001 230.01665 18.879999 231.02464 18.879999 c
231.02464 18.879999 232.56064 18.879999 232.56064 18.879999 c
233.56865 18.879999 234.09665 19.408001 234.09665 20.464001 c
234.09665 20.464001 234.09665 30.208 234.09665 30.208 c
234.09665 34.863998 236.78464 39.52 241.29665 39.52 c
244.89664 39.52 245.56865 36.832001 245.56865 33.424 c
245.56865 33.424 245.56865 20.464001 245.56865 20.464001 c
245.56865 19.408001 246.14464 18.879999 247.15265 18.879999 c
247.15265 18.879999 248.64064 18.879999 248.64064 18.879999 c
249.69664 18.879999 250.22464 19.408001 250.22464 20.464001 c
250.22464 20.464001 250.22464 34.431999 250.22464 34.431999 c
250.22464 40.624001 247.72864 43.743999 242.20865 43.743999 c
238.27264 43.743999 234.91264 41.056 233.61664 38.223999 c
233.61664 38.223999 233.52065 38.223999 233.52065 38.223999 c
232.65665 41.872002 230.30464 43.743999 226.22464 43.743999 c
222.38464 43.743999 218.97664 40.863998 217.77664 38.032001 c
217.77664 38.032001 217.68065 38.032001 217.68065 38.032001 c
217.68065 38.032001 217.82465 38.703999 217.82465 39.424 c
217.82465 39.424 217.82465 41.584 217.82465 41.584 c
217.82465 42.639999 217.29665 43.167999 216.24065 43.167999 c
216.24065 43.167999 214.89664 43.167999 214.89664 43.167999 c
213.88864 43.167999 213.31264 42.639999 213.31264 41.584 c
213.31264 41.584 213.31264 20.464001 213.31264 20.464001 c
h
f*
254.73665 10.864 m
254.73665 9.8079996 255.26465 9.2799997 256.32065 9.2799997 c
256.32065 9.2799997 257.80865 9.2799997 257.80865 9.2799997 c
258.81665 9.2799997 259.34464 9.8079996 259.34464 10.864 c
259.34464 10.864 259.34464 20.511999 259.34464 20.511999 c
259.34464 21.76 259.20065 22.624001 259.20065 22.624001 c
259.20065 22.624001 259.29663 22.624001 259.29663 22.624001 c
259.29663 22.624001 261.31265 18.304001 266.83264 18.304001 c
273.16864 18.304001 277.82465 23.296 277.82465 31.024 c
277.82465 38.560001 273.69666 43.743999 267.16864 43.743999 c
261.07263 43.743999 259.00864 39.088001 259.00864 39.088001 c
259.00864 39.088001 258.91263 39.088001 258.91263 39.088001 c
258.91263 39.088001 259.00864 39.664001 259.00864 40.383999 c
259.00864 40.383999 259.00864 41.824001 259.00864 41.824001 c
259.00864 42.639999 258.48065 43.167999 257.42465 43.167999 c
257.42465 43.167999 256.32065 43.167999 256.32065 43.167999 c
255.26465 43.167999 254.73665 42.639999 254.73665 41.584 c
254.73665 41.584 254.73665 10.864 254.73665 10.864 c
h
259.24863 30.927999 m
259.24863 37.119999 262.60864 39.664001 266.25665 39.664001 c
270.28864 39.664001 273.12064 36.256001 273.12064 30.976 c
273.12064 25.455999 269.95264 22.336 266.11264 22.336 c
261.64865 22.336 259.24863 26.608 259.24863 30.927999 c
h
f*
279.21664 25.504 m
279.21664 20.944 283.10464 18.304001 287.37665 18.304001 c
293.04065 18.304001 295.29663 23.392 295.29663 23.392 c
295.29663 23.392 295.39264 23.392 295.39264 23.392 c
295.39264 23.392 295.24863 22.816 295.24863 21.903999 c
295.24863 21.903999 295.24863 20.464001 295.24863 20.464001 c
295.24863 19.408001 295.82465 18.879999 296.83264 18.879999 c
296.83264 18.879999 298.03265 18.879999 298.03265 18.879999 c
299.04065 18.879999 299.61664 19.408001 299.61664 20.464001 c
299.61664 20.464001 299.61664 34.240002 299.61664 34.240002 c
299.61664 40.383999 296.11264 43.743999 290.06464 43.743999 c
286.36865 43.743999 283.63263 42.495998 282.19263 41.68 c
281.32864 41.200001 281.18463 40.431999 281.66464 39.52 c
281.66464 39.52 282.04865 38.848 282.04865 38.848 c
282.57663 37.984001 283.29663 37.84 284.20865 38.271999 c
285.31265 38.896 287.28064 39.807999 289.68063 39.807999 c
292.65665 39.807999 294.96063 38.464001 294.96063 34.48 c
294.96063 34.48 294.96063 33.855999 294.96063 33.855999 c
294.96063 33.855999 293.71265 33.855999 293.71265 33.855999 c
288.67264 33.855999 279.21664 33.040001 279.21664 25.504 c
h
283.92065 25.888 m
283.92065 30.496 290.35263 30.784 293.76065 30.784 c
293.76065 30.784 295.00864 30.784 295.00864 30.784 c
295.00864 30.784 295.00864 29.728001 295.00864 29.728001 c
295.00864 26.128 292.51263 22 288.43265 22 c
285.45663 22 283.92065 23.968 283.92065 25.888 c
h
f*
304.08063 20.464001 m
304.08063 19.408001 304.65665 18.879999 305.66464 18.879999 c
305.66464 18.879999 307.15265 18.879999 307.15265 18.879999 c
308.20865 18.879999 308.73663 19.408001 308.73663 20.464001 c
308.73663 20.464001 308.73663 30.496 308.73663 30.496 c
308.73663 35.535999 312.14465 39.472 316.84863 39.472 c
320.73663 39.472 321.40863 36.784 321.40863 33.375999 c
321.40863 33.375999 321.40863 20.464001 321.40863 20.464001 c
321.40863 19.408001 321.98465 18.879999 322.99265 18.879999 c
322.99265 18.879999 324.48065 18.879999 324.48065 18.879999 c
325.53665 18.879999 326.06464 19.408001 326.06464 20.464001 c
326.06464 20.464001 326.06464 34.431999 326.06464 34.431999 c
326.06464 40.624001 323.47266 43.743999 317.76065 43.743999 c
312.43265 43.743999 309.50464 40.144001 308.54465 38.032001 c
308.54465 38.032001 308.44864 38.032001 308.44864 38.032001 c
308.44864 38.032001 308.59265 38.703999 308.59265 39.424 c
308.59265 39.424 308.59265 41.584 308.59265 41.584 c
308.59265 42.639999 308.06464 43.167999 307.00864 43.167999 c
307.00864 43.167999 305.66464 43.167999 305.66464 43.167999 c
304.65665 43.167999 304.08063 42.639999 304.08063 41.584 c
304.08063 41.584 304.08063 20.464001 304.08063 20.464001 c
h
f*
328.17664 12.448 m
328.17664 12.448 327.79263 11.632 327.79263 11.632 c
327.40863 10.816 327.60065 9.9519997 328.51263 9.5679998 c
329.32864 9.2320004 330.48065 8.8000002 331.87265 8.8000002 c
335.28064 8.8000002 338.30466 10.816 339.74463 14.608 c
339.74463 14.608 350.44864 41.344002 350.44864 41.344002 c
350.88065 42.448002 350.35263 43.167999 349.20065 43.167999 c
349.20065 43.167999 347.47266 43.167999 347.47266 43.167999 c
346.51263 43.167999 345.98465 42.784 345.69666 41.872002 c
345.69666 41.872002 340.17664 27.232 340.17664 27.232 c
339.74463 25.983999 339.36066 24.351999 339.36066 24.351999 c
339.36066 24.351999 339.26465 24.351999 339.26465 24.351999 c
339.26465 24.351999 338.83264 26.08 338.40063 27.280001 c
338.40063 27.280001 332.68863 41.919998 332.68863 41.919998 c
332.40063 42.784 331.82465 43.167999 330.91263 43.167999 c
330.91263 43.167999 329.04065 43.167999 329.04065 43.167999 c
327.88864 43.167999 327.36066 42.448002 327.84064 41.344002 c
327.84064 41.344002 337.24863 19.167999 337.24863 19.167999 c
337.24863 19.167999 336.04865 16.384001 336.04865 16.384001 c
335.28064 14.464 333.84064 12.736 331.87265 12.736 c
331.05664 12.736 330.43265 13.072 329.95264 13.264 c
329.28064 13.456 328.56064 13.312 328.17664 12.448 c
h
f*
1 0.80000007 0 sc
28.799999 56 m
28.799999 56 32.179165 45.599998 32.179165 45.599998 c
32.179165 45.599998 38.690987 48.813778 38.690987 48.813778 c
38.690987 48.813778 37.646767 41.627552 37.646767 41.627552 c
37.646767 41.627552 48.581974 41.627552 48.581974 41.627552 c
48.581974 41.627552 39.735207 35.200001 39.735207 35.200001 c
39.735207 35.200001 44.803955 30 44.803955 30 c
44.803955 30 37.646767 28.772448 37.646767 28.772448 c
37.646767 28.772448 41.025932 18.372446 41.025932 18.372446 c
41.025932 18.372446 32.179165 24.800001 32.179165 24.800001 c
32.179165 24.800001 28.799999 18.372446 28.799999 18.372446 c
28.799999 18.372446 25.420835 24.800001 25.420835 24.800001 c
25.420835 24.800001 16.574066 18.372446 16.574066 18.372446 c
16.574066 18.372446 19.953232 28.772448 19.953232 28.772448 c
19.953232 28.772448 12.796045 30 12.796045 30 c
12.796045 30 17.864794 35.200001 17.864794 35.200001 c
17.864794 35.200001 9.0180244 41.627552 9.0180244 41.627552 c
9.0180244 41.627552 19.953232 41.627552 19.953232 41.627552 c
19.953232 41.627552 18.909012 48.813778 18.909012 48.813778 c
18.909012 48.813778 25.420835 45.599998 25.420835 45.599998 c
25.420835 45.599998 28.799999 56 28.799999 56 c
h
f*
ep
end
%%Trailer
%%EOF
